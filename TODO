h2. Already done

* make sure nobody captures a King

* incentive the promotion of Pawns

* general: improve speed (currently very slow...)

* there is a bug (computer player does not escape from Check) which I
  suppose comes from the fact that sides aren't checked properly. That
  is, I suppose it gets the wrong side, so it doesn't recognise Check
  because it looks to the wrong King...

h2. Still to do

Here follows a categorised list of "to do" items.

h3. UI

* check that the user move is allowed before applying it:
** does it comply with the movement rules?
** does it move the enemy piece instead of its own?
** does it leave own King under attack?

Please note: it is actually convenient to be allowed to make
impossible moves, especially in debugging. Therefore this task is
actually lower priority.

h3. Optimisation

* performance test with different hardware (memory, CPU, disks)

* rewrite some routines using faster algorithms (and maybe a different
  language?)

* test how beneficial it would be to compact the game status: faster
  to store, but slower to handle...

h3. AI

* make sure the computer player understand the importance of check

* make sure the computer player understand the importance of checkmate

h3. Chess rules

* implement castling

* implement en-passant

* implement a stalemate message

* implement a checkmate message

* implement draw by 3-fold repeat
